{
    "name": "codemap",
    "displayName": "CodeMap",
    "description": "Interactive code map for quick visualization and navigation within code DOM objects (e.g. classes, members).",
    "version": "1.16.2",
    "license": "MIT",
    "publisher": "oleg-shilo",
    "engines": {
        "vscode": "^1.56.2"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "CodeMap, codedom"
    ],
    "bugs": {
        "url": "https://github.com/oleg-shilo/codemap.vscode/issues",
        "email": "oshilo@gmail.com"
    },
    "homepage": "https://github.com/oleg-shilo/codemap.vscode/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/oleg-shilo/codemap.vscode.git"
    },
    "activationEvents": [
        "onCommand:codemap.quick_pick",
        "onView:codemap-own-view",
        "onView:codemap-explorer-view"
    ],
    "main": "./out/src/extension",
    "icon": "media/logo.png",
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "codemap-explorer",
                    "title": "CodeMap Explorer",
                    "icon": "resources/light/logo_ab.svg"
                }
            ]
        },
        "views": {
            "codemap-explorer": [
                {
                    "id": "codemap-own-view",
                    "name": "Code Map",
                    "when": "config.codemap.location == codemap"
                }
            ],
            "explorer": [
                {
                    "id": "codemap-explorer-view",
                    "name": "Code Map",
                    "when": "config.codemap.location == explorer"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "CodeMap configuration",
            "properties": {
                "codemap.textMode": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show tree view with un-expendable nodes for better user experience (ignore double-clicking) Note, alphabetical sorting is not available in this mode."
                },
                "codemap.sortingEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable alphabetical order if the CodeMap a node items."
                },
                "codemap.textModeExpanded": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show expanded child items just after loading the TreeView items."
                },
                "codemap.autoReveal": {
                    "type": "boolean",
                    "default": true,
                    "description": "Automatically reveal code from current document position in the tree view on position change."
                },
                "codemap.maxNestingLevel": {
                    "type": "number",
                    "default": 3,
                    "description": "Maximum nesting/indentation level of the code map entries. This setting can be used to control code map details level of highly structured code."
                },
                "codemap.textModeLevelPrefix": {
                    "type": "string",
                    "default": "   ",
                    "description": "Required for improving user experience in 'codemap.textMode' since VSCode swallows all whitespace indent indicating nesting level. Default value is a string of 3 non-whitespace empty chars (char U+00A0)."
                },
                "codemap.asm": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": "^\\s*([0-9A-Za-z_$#@~\\.\\?]*?):\\s*$",
                            "role": "function",
                            "icon": "function"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for Assembly syntax."
                },
                "codemap.erl": {
                    "type": "string",
                    "default": "./mapper_erlang.js",
                    "description": "Dedicated mapper for Erlang syntax."
                },
                "codemap.hrl": {
                    "type": "string",
                    "default": "./mapper_erlang.js",
                    "description": "Dedicated mapper for Erlang syntax."
                },
                "codemap.java": {
                    "type": "string",
                    "default": "./mapper_java.js",
                    "description": "Dedicated mapper for Java syntax."
                },
                "codemap.tcl": {
                    "type": "string",
                    "default": "./mapper_tcl.js",
                    "description": "Dedicated mapper for TCL syntax."
                },
                "codemap.ps1": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": "function \\w*",
                            "clear": "function ",
                            "suffix": "()",
                            "icon": "function"
                        },
                        {
                            "pattern": "param\\(\\w*",
                            "clear": "(|{",
                            "suffix": ")",
                            "icon": "function"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for PowerShell syntax."
                },
                "codemap.r": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": ".*<-.*function.*",
                            "clear": "{|<-.*function",
                            "icon": "function"
                        },
                        {
                            "pattern": ".*test_that.*",
                            "clear": ", {|{",
                            "suffix": ")",
                            "icon": "function"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for R syntax."
                },
                "codemap.json": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": "\\s\\\"[\\w.-]*\":\\s[{|[]",
                            "clear": "{|:|\"|\\[",
                            "prefix": "",
                            "icon": "level2"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for JSON syntax."
                },
                "codemap.py": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": "(?<![^\\r\\n\\t\\f\\v .])class (.*?)[(|:]",
                            "clear": "class|:|\\)|\\(",
                            "prefix": "",
                            "role": "class",
                            "icon": "class"
                        },
                        {
                            "pattern": "def (.*?)[(|:]",
                            "clear": "def|:|\\(|\\)",
                            "suffix": "()",
                            "role": "function",
                            "icon": "function"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for Python syntax."
                },
                "codemap.svg": {
                    "type": "string",
                    "default": "config:codemap.xml",
                    "description": "Redirected (to XML) mapper."
                },
                "codemap.xaml": {
                    "type": "string",
                    "default": "config:codemap.xml",
                    "description": "Redirected (to XML) mapper."
                },
                "codemap.xml": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": "\\s?<[^\\/|^\\?|^\\!][\\w:]*",
                            "clear": "<",
                            "prefix": "",
                            "icon": "level3"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for XML syntax."
                },
                "codemap.md": {
                    "type": "array",
                    "default": [
                        {
                            "pattern": "^(\\s*)### (.*)",
                            "clear": "###",
                            "prefix": " -",
                            "icon": "level3"
                        },
                        {
                            "pattern": "^(\\s*)## (.*)",
                            "clear": "##",
                            "prefix": " ",
                            "icon": "level2"
                        },
                        {
                            "pattern": "^(\\s*)# (.*)",
                            "clear": "#",
                            "prefix": "",
                            "icon": "level1"
                        },
                        {
                            "pattern": "!\\[image\\]",
                            "clear": "![image]",
                            "prefix": "<image>",
                            "icon": "none"
                        },
                        {
                            "pattern": "!\\[\\]",
                            "clear": "![]",
                            "prefix": "<image>",
                            "icon": "none"
                        }
                    ],
                    "description": "Regex-based definition of the mapping rules for Markup syntax."
                },
                "codemap.location": {
                    "type": "string",
                    "default": "codemap",
                    "enum": [
                        "codemap",
                        "explorer"
                    ],
                    "enumDescriptions": [
                        "Adds to the CodeMap side bar",
                        "Adds to the Explorer side bar"
                    ],
                    "markdownDescription": "Specifies where to show the _CodeMap_ view",
                    "scope": "window"
                }
            }
        },
        "commands": [
            {
                "command": "codemap.navigate_to_selected",
                "title": "CodeMap: Navigate to selected member"
            },
            {
                "command": "codemap.reveal",
                "title": "CodeMap: Reveal code from current document position in the tree view",
                "icon": {
                    "light": "resources/light/arrow-both.svg",
                    "dark": "resources/dark/arrow-both.svg"
                }
            },
            {
                "command": "codemap.mappers",
                "title": "CodeMap: Show mappers configuration"
            },
            {
                "command": "codemap.refresh",
                "title": "CodeMap: Refresh",
                "icon": {
                    "light": "resources/light/refresh.svg",
                    "dark": "resources/dark/refresh.svg"
                }
            },
            {
                "command": "codemap.quick_pick",
                "title": "CodeMap: Quick pick",
                "icon": {
                    "light": "resources/light/pick.svg",
                    "dark": "resources/dark/pick.svg"
                }
            }
        ],
        "keybindings": [
            {
                "key": "alt+p",
                "command": "codemap.quick_pick"
            },
            {
                "key": "alt+l",
                "command": "codemap.reveal"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "codemap.refresh",
                    "when": "view == codemap-own-view || view == codemap-explorer-view",
                    "group": "navigation@2"
                },
                {
                    "command": "codemap.reveal",
                    "when": "(view == codemap-own-view || view == codemap-explorer-view) && config.autoReveal == false",
                    "group": "navigation@2"
                },
                {
                    "command": "codemap.quick_pick",
                    "when": "view == codemap-own-view || view == codemap-explorer-view",
                    "group": "navigation@2"
                }
            ],
            "view/item/context": [
                {
                    "command": "codemap.navigate_to_selected",
                    "when": "view == codemap-own-view || view == codemap-explorer-view"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint src --ext ts",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^7.0.2",
        "@types/node": "^13.13.52",
        "@types/vscode": "^1.44.0",
        "@typescript-eslint/eslint-plugin": "^3.6.1",
        "@typescript-eslint/parser": "^3.6.1",
        "eslint": "^6.8.0",
        "glob": "^7.1.6",
        "mocha": "^7.1.1",
        "typescript": "^3.8.3",
        "vscode-test": "^1.3.0"
    },
    "dependencies": {
        "fs-extra": "^9.0.0",
        "mkdirp": "^1.0.4"
    }
}
